type User {
  _id: ID
  username: String! @unique
  email: String!
  password: String!
  avatar: String
  joinDate: String
}

type Post {
  _id: ID
  title: String! @unique
  imageUrl: String
  categories: [String]!
  variables: [String]!
  description: String
  createdDate: String
  userId: User!
}

type Report {
  _id: ID
  report_name: String
  report_desc: String
  template_name: [String]
  file_name: [String]
  project_id: [String]
  node_id: [String]
  variable: [String]
  previous: [String]
  modified: [String]
  createdDate: String
  userId: User!
}

type Template {
  _id: ID
  title: String! @unique
  templateType: String
  content: String!
  treeTemplate: [String]
  filenames: [String]
  filetypes: [String]
  createdDate: String
  userId: User!
}

type Process {
  _id: ID
  title: String!
  templateType: String
  templates: [String]!
  originalTemp: String
  newTemplates: [String]!
  isUpdated: String
  node_ids: [String]
  project_ids: [String]
  file_names: [String]
  file_types: [String]
  createdDate: String
  userId: User!
}

type PostsPage {
 posts: [Post]
 hasMore: Boolean
}

type Query {
  getCurrentUser: User
  getPosts: [Post]
  getTemplates: [Template]
  getSavedTemplates: [Process]
  getPost(postId: ID!): Post!
  getTemplate(templateId: ID!): Template!
  getUserPosts(userId: ID!): [Post]
  getUserReports(userId: ID!): [Report]
  getUserTemplates(userId: ID!): [Template]
  getUserSavedTemplates(userId: ID!): [Process]
  infiniteScrollPosts(pageNum: Int!, pageSize: Int!): PostsPage
  searchPosts(searchTerm:String): [Post]
}

type Token {
  token: String!
}

type LoggedInUser {
  token: String!
  user: User!
}

type Mutation {
  addPost(
    title: String!
    imageUrl: String!
    categories: [String]!
    variables: [String]!
    description: String!
    userId: ID!
  ): Post!

  addReport(
    report_name: String!
    report_desc: String!
    template_name: [String]!
    file_name: [String]!
    project_id: [String]!
    node_id: [String]!
    variable: [String]!
    previous: [String]!
    modified: [String]!
    userId: ID!
  ): Report!

  addTemplate(
    title: String!
    templateType: String!
    content: String!
    treeTemplate: [String]!
    filenames: [String]!
    filetypes: [String]!
    userId: ID!
  ): Template!
  saveTemplates(
    title: String!
    templateType: String!
    templates: [String]!
    originalTemp: String!
    newTemplates: [String]!
    isUpdated: String!
    node_ids: [String]!
    project_ids: [String]!
    file_names: [String]!
    file_types: [String]!
    userId: ID!
  ): Process!
  updateUserPost(
    postId: ID!
    userId: ID!
    title: String!
    imageUrl: String!
    categories: [String]!
    variables: [String]!
    description: String!
  ): Post!

  updateUserTemplate(
    templateId: ID!
    userId: ID!
    title: String!
    templateType: String!
    content: String!
    treeTemplate: [String]!
    filenames: [String]!
    filetypes: [String]!
  ): Template!

  updateProcTemplate(
    templateId: ID!
    userId: ID!
    title: String!
    templateType: String!
    templates: [String]!
    originalTemp: String!
    newTemplates: [String]!
    isUpdated: String!
    node_ids: [String]!
    project_ids: [String]!
    file_names: [String]!
    file_types: [String]!
  ): Process!
  deleteUserPost(postId: ID!): Post!
  deleteUserReport(reportId: ID!): Report!
  deleteUserTemplate(templateId: ID!): Template!
  deleteUserSavedTemplate(templateId: ID!): Process!
  registerUser(username: String!, email: String!, password: String!): Token!
  loginUser(email: String!, password: String!): LoggedInUser!
}
